/*
 * File: QuotaListAdapter.java Purpose: Brings the implementation of class
 * QuotaListAdapter.
 */
package br.com.visualize.akan.domain.adapters;

import java.util.ArrayList;
import java.util.List;

import android.annotation.SuppressLint;
import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.TextView;
import br.com.visualize.akan.R;
import br.com.visualize.akan.domain.enumeration.Status;


/**
 * Represents a list of congressman adapting its entirety a particular form
 * described by the class.
 */
@SuppressLint("ViewHolder")
public class ConfigurationsGridAdapter extends ArrayAdapter<String> {
	
	private final Context context;
	public List<String> texts;
	public List<String> activeIds = new ArrayList<String>();
	
	private int layoutInflated;
	
	public ConfigurationsGridAdapter( Context context, int textViewResourceId,
	        List<String> textsList ) {
		
		super( context, textViewResourceId, textsList );
		
		this.layoutInflated = textViewResourceId;
		this.context = context;
		this.texts = new ArrayList<String>();
		this.texts.addAll(textsList);
	}
	
	/**
	 * Sets a view that will associated the list generated by the Adapter, as
	 * the parameters passed, and returns.
	 */
	
	@Override
	public View getView( int position, View convertView, ViewGroup parent ) {
		String text = texts.get(position);
		
		LayoutInflater inflater = (LayoutInflater)context
		        .getSystemService( Context.LAYOUT_INFLATER_SERVICE );
		View view;
		view = inflater.inflate( layoutInflated, null );
		
		TextView filterButton = (TextView)view.findViewById(R.id.filter_button);
		
		filterButton.setText(text);
		if(activeIds.contains(position+"")){
			filterButton.setTag(Status.ACTIVE);
			view.setBackgroundResource(R.drawable.active_option);
		}
		else {
			filterButton.setTag(Status.INACTIVE);
			view.setBackgroundResource(R.drawable.inactive_option);
		}
		
		return view;
	}
	
	/**
	 * Returns the list item requested.
	 * 
	 * @param position
	 *            Position of the item to be returned.
	 * 
	 * @return Quota associated with position.
	 */
	@Override
	public String getItem( int position ) {
		return texts.get( position );
	}
	
	/**
	 * Returns the number of elements associated with the list.
	 * 
	 * @return Number of elements.
	 */
	@Override
	public int getCount() {
		return texts.size();
	}
	
	@Override
	public boolean isEnabled( int position ) {
		return true;
	}
	
}
